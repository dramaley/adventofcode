#!/usr/bin/perl

use 5.8.1;
use strict;
use warnings 'all';

our @blocks;

# Read input
{   my $i = 0;
    foreach (map { chomp; split //; } <>) {
        my $item = $i % 2 == 0 ? $i/2 : undef;
        push @blocks, ($item) x $_;
        $i++;
    }
}

# Reorganize blocks
my $ptr = 0;
while (1) {
    pop @blocks while not defined $blocks[-1];  # Remove empties from the end
    $ptr++ while defined $blocks[$ptr];         # Find an empty space to fill
    last if $ptr > $#blocks;                    # No more empties--all done
    $blocks[$ptr] = pop @blocks;                # Fill the empty space
}

# Calculate checksum
my $sum = 0;
$sum += $blocks[$_] * $_ foreach 0..$#blocks;
print "${sum}\n";
