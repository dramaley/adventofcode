#!/usr/bin/perl

use 5.8.1;
use strict;
use warnings 'all';
use Array::Heap::PriorityQueue::Numeric;

# This is my first working solution. I later optimized it a bit, the result of
# which is in the "part1" file.


# Correlate direction (North = 0, East = 1, South = 2, West = 3) with what to
# increment (row, column) by.
our @movements = ([-1, 0],      # North, subtract one from row
                  [0, 1],       # East, add one to column
                  [1, 0],       # South, add one to row
                  [0, -1]);     # West, subtract one from column
our (@grid, $start_row, $start_col);
our $start_dir = 1;     # North = 0, East = 1, South = 2, West = 3

# Read input
while (<>) {
    chomp;
    push @grid, [ split // ];
    if (m/S/g) {        # Found the start position
        $start_row = $. - 1;
        $start_col = pos() - 1;
    }
}

# Let's solve this thing
my $solution = ~0;                      # Assume infinity
my $pq = Array::Heap::PriorityQueue::Numeric->new();
$pq->add([ $start_row, $start_col, $start_dir, 0 ], 0); # Item is state + cost
my %seen;
while (my $entry = $pq->get()) {
    my ($row, $col, $dir, $cost) = @$entry;
    next if $seen{join(',', $row, $col, $dir)}++; # We've been here before
    next if $cost >= $solution;         # No point in continuing
    if ($grid[$row][$col] eq 'E') {     # Check if we solved it
        $solution = $cost if $cost < $solution;
        next;
    }
    # There are 3 possible moves from here: turn left, turn right, move forward
    # Try turning left
    my $new_dir = ($dir - 1) % 4;
    my $new_cost = $cost + 1000;    # Turning is expensive AF
    $pq->add([ $row, $col, $new_dir, $new_cost ], $new_cost);
    # Try turning right
    $new_dir = ($dir + 1) % 4;
    $pq->add([ $row, $col, $new_dir, $new_cost ], $new_cost);
    # Try moving forward
    my $new_row = $row + $movements[$dir][0];
    my $new_col = $col + $movements[$dir][1];
    if ($grid[$new_row][$new_col] ne '#') {
        $new_cost = $cost + 1;
        $pq->add([ $new_row, $new_col, $dir, $new_cost ], $new_cost);
    }
}
print "${solution}\n";
