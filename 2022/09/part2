#!/usr/bin/perl

use 5.8.1;
use strict;
use warnings 'all';

our %moves = ('U' => [-1, 0], 'D' => [1, 0], 'L' => [0, -1], 'R' => [0, 1]);
our @rope = map { [0, 0] } 1..10;
our %visited = (join(',', @{$rope[-1]}) => undef);

while (<>) {
    chomp;
    my ($dir, $dist) = split / /;               # Direction and distance
    my ($row_off, $col_off) = @{$moves{$dir}};  # Get offsets
    foreach (1..$dist) {
        $rope[0][0] += $row_off;                # Update head position
        $rope[0][1] += $col_off;
        for (my $i = 0; $i < $#rope; $i++) {    # Loop over the rope
            my $this = $rope[$i];
            my $next = $rope[$i+1];
            # No further action if next is still nearby
            next if (abs($$this[0] - $$next[0]) <= 1 and
                     abs($$this[1] - $$next[1]) <= 1);
            $$next[0] += $$this[0] - $$next[0] <=> 0;
            $$next[1] += $$this[1] - $$next[1] <=> 0;
        }
        $visited{join(',', @{$rope[-1]})} = ();
    }
}

print scalar(keys %visited), "\n";
