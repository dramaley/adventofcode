#!/usr/bin/perl

use 5.8.1;
use strict;
use warnings 'all';

# Functions with obvious names
sub max { return (sort { $a <=> $b } @_)[-1]; }
sub min { return (sort { $a <=> $b } @_)[0]; }

my %points;
while (<>) {
    my ($x1, $y1, $x2, $y2) = m/(\d+)/g;
    ($x1, $y1, $x2, $y2) = ($x2, $y2, $x1, $y1)     # Sort points by X, then Y
        if $x1 > $x2 or ($x1 == $x2 and $y1 > $y2);

    if ($x1 == $x2) {                               # Vertical lines
        $points{$_}++ foreach map { "${x1},$_" } $y1..$y2;
    } elsif ($y1 == $y2) {                          # Horizontals
        $points{$_}++ foreach map { "$_,${y1}" } $x1..$x2;
    } else {                                        # Diagonals
        my $y = $y1;
        my $delta_y = $y2 <=> $y1;
        foreach my $x ($x1..$x2) {
            $points{"${x},${y}"}++;
            $y += $delta_y;
        }
    }
}

print scalar(grep { $_ > 1 } values %points), "\n";
